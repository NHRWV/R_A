library(twitteR)
CONSUMER_SECRET <- "E8u5PZvaNvCNXIi34yEE8Efs8AEz2TxJbvyjpjWi2OpE3HENDQ"
CONSUMER_KEY <- "hvHT3aR6Reugq4OMSEUG0sums"
ACCESS_SECRET <- "BbKb4BFRfzyVppA380bh5FHxEjgV2s0PefdNy7Avthmsy"
ACCESS_TOKEN <- "701807611465740288-g0Dp8IPrCv8VTEJfKRStR1dGHONeoxN"
setup_twitter_oauth(consumer_key = CONSUMER_KEY,
consumer_secret = CONSUMER_SECRET,
access_token = ACCESS_TOKEN,
access_secret = ACCESS_SECRET)
searchTerm1 <- "#GalaxyNote10"
searchTerm2 <- "#iPhone11"
trendingTweets = searchTwitter(searchTerm1,n=1000,lang = "en")
words1 = rnorm(100); words2 = rt(100, df=3) #if df is large enough, t-dist approaches Z-dist
par(mfrow=c(1,2))
hist(words1, breaks = 10, col = 2)
hist(words2, breaks = 10, col = 2)
shapiro.test(words1); shapiro.test(words2)
ks.test(words1, rnorm(100));ks.test(words2, rnorm(100))
qqnorm(words1);qqline(words1, col = 2)
qqnorm(words2);qqline(words2, col = 2)
par(mfrow=c(1,1))
setwd("C:/Users/Namlister/Desktop/Assignments/R_A")
ggr <- read.csv("GDP_성장률.csv", stringsAsFactors = F, header = T)
View(ggr)
ggr$대륙[1:49,] <- "아시아"
ggr$대륙[1:49,] <- "아시아"
class(ggr)
ggr$대륙 <- "아시아"
View(ggr)
ggr$대륙[50:54,] <- "북아메리카"
ggr$대륙[50:54,] <- ggr$대륙["북아메리카",]
ggr$대륙[50:54,] <- "북아메리카"
ggr$대륙[50:54] <- "북아메리카"
ggr$대륙[50:54] <- "북아메리카"
ggr$대륙[55:91] <- "남아메리카"
ggr$대륙[92:135] <- "유럽"
ggr$대륙[136:186] <- "아프리카"
ggr$대륙[187:204] <- "오세아니아"
ggr$국가 <- ggr$국가별
ggr <- read.csv("GDP_성장률.csv", stringsAsFactors = F, header = T)
ggr$대륙 <- "아시아"
ggr$대륙[50:54] <- "북아메리카"
ggr$대륙[55:91] <- "남아메리카"
ggr$대륙[92:135] <- "유럽"
ggr$대륙[136:186] <- "아프리카"
ggr$대륙[187:204] <- "오세아니아"
names(ggr$국가별) = "국가가"
names(ggr$국가별) = "국가"
names(ggr$국가별) = "국가"
ggr$국가별 = "국가"
ggr$국가별 = "국가"
ggr <- read.csv("GDP_성장률.csv", stringsAsFactors = F, header = T)
ggr$대륙 <- "아시아"
ggr$대륙[50:54] <- "북아메리카"
ggr$대륙[55:91] <- "남아메리카"
ggr$대륙[92:135] <- "유럽"
ggr$대륙[136:186] <- "아프리카"
ggr$대륙[187:204] <- "오세아니아"
colnames <- c("국가", 2015, 2016, 2017, 2018, "대륙")
colnames(ggr) <- c("국가", 2015, 2016, 2017, 2018, "대륙")
colnames(ggr) <- c("국가", "2015년", "2016년", "2017년", "2018년", "대륙")
ggr$국가 <- ggr[-c(1, 50, 55, 92, 136, 187),]
ggr <- ggr[-c(1, 50, 55, 92, 136, 187),]
ggr <- read.csv("GDP_성장률.csv", stringsAsFactors = F, header = T)
hdi <- read.csv("인간개발지수.csv", stringsAsFactors = F, header = T)
# 소속된 대륙을 나타내는 열 추가
ggr$대륙 <- "아시아"
ggr$대륙[50:54] <- "북아메리카"
ggr$대륙[55:91] <- "남아메리카"
ggr$대륙[92:135] <- "유럽"
ggr$대륙[136:186] <- "아프리카"
ggr$대륙[187:204] <- "오세아니아"
colnames(ggr) <- c("국가", "2015년", "2016년", "2017년", "2018년", "대륙")
ggr <- ggr[-c(1, 50, 55, 92, 136, 187),] # 행에 존재했던 지역이름 제거
ggr <- read.csv("GDP_성장률.csv", stringsAsFactors = F, header = T)
hdi <- read.csv("인간개발지수.csv", stringsAsFactors = F, header = T)
# 소속된 대륙을 나타내는 열 추가
ggr$대륙 <- "아시아"
ggr$대륙[50:54] <- "북아메리카"
ggr$대륙[55:91] <- "남아메리카"
ggr$대륙[92:135] <- "유럽"
ggr$대륙[136:186] <- "아프리카"
ggr$대륙[187:204] <- "오세아니아"
colnames(ggr) <- c("국가", "2015년", "2016년", "2017년", "2018년", "대륙")
ggr <- ggr[-c(1, 50, 55, 92, 136, 187),] # 행에 존재했던 지역이름 제거
View(ggr)
View(hdi)
hdi <- read.csv("인간개발지수.csv", stringsAsFactors = F, header = T)
hdi <- read.csv("인간개발지수.csv", stringsAsFactors = F, header = T)
ggr$평균성장률 <- (ggr$`2015년` * ggr$`2016년` * ggr$`2017년` *ggr$`2018년`)/4
length(ggr)
length(ggr$국가가)
length(ggr$국가)
for(i in 1:length(ggr$국가)){
ggr$평균성장률[i] <- (ggr$`2015년`[i] * ggr$`2016년`[i] * ggr$`2017년`[i] *ggr$`2018년`[i])/4
}
ggr <- na.omit(ggr)
ggr <- na.omit(ggr)
ggr <- read.csv("GDP_성장률.csv", stringsAsFactors = F, header = T, na.strings = "-")
hdi <- read.csv("인간개발지수.csv", stringsAsFactors = F, header = T, na.strings = "-")
# 소속된 대륙을 나타내는 열 추가
ggr$대륙 <- "아시아"
ggr$대륙[50:54] <- "북아메리카"
ggr$대륙[55:91] <- "남아메리카"
ggr$대륙[92:135] <- "유럽"
ggr$대륙[136:186] <- "아프리카"
ggr$대륙[187:204] <- "오세아니아"
colnames(ggr) <- c("국가", "2015년", "2016년", "2017년", "2018년", "대륙")
ggr <- ggr[-c(1, 50, 55, 92, 136, 187),] # 행에 존재했던 지역이름 제거
ggr <- na.omit(ggr)
ggr <- na.omit(ggr)
hdi <- na.omit(hdi)
for(i in 1:length(ggr$국가)){
ggr$평균성장률[i] <- (ggr$`2015년`[i] * ggr$`2016년`[i] * ggr$`2017년`[i] *ggr$`2018년`[i])/4
}
ggr$평균성장률[i] <- (ggr$`2015년`[i] + ggr$`2016년`[i] + ggr$`2017년`[i] + ggr$`2018년`[i])/4
for(i in 1:length(ggr$국가)){
ggr$평균성장률[i] <- (ggr$`2015년`[i] + ggr$`2016년`[i] + ggr$`2017년`[i] + ggr$`2018년`[i])/4
}
님하 알통계 과제 함?
colnames(hdi) <- c("국가", "hdi_순위", "인간개발지수", "기대수명",
"평균교육기간", "기대교육기간", "1인당_GNI")
df <- inner_join(ggr, hdi, by = "국가")
library(dplyr)
df <- inner_join(ggr, hdi, by = "국가")
View(df)
ggr <- read.csv("GDP_성장률.csv", stringsAsFactors = F, header = T, na.strings = "-")
hdi <- read.csv("인간개발지수.csv", stringsAsFactors = F, header = T, na.strings = "-")
# 소속된 대륙을 나타내는 열 추가
ggr$대륙 <- "아시아"
ggr$대륙[50:54] <- "북아메리카"
ggr$대륙[55:91] <- "남아메리카"
ggr$대륙[92:135] <- "유럽"
ggr$대륙[136:186] <- "아프리카"
ggr$대륙[187:204] <- "오세아니아"
colnames(ggr) <- c("국가", "2015년", "2016년", "2017년", "2018년", "대륙")
ggr <- ggr[-c(1, 50, 55, 92, 136, 187),] # 행에 존재했던 지역이름 제거
ggr <- na.omit(ggr) # na 존재하는 행 제거.
hdi <- na.omit(hdi)
for(i in 1:length(ggr$국가)){
ggr$평균성장률[i] <- (ggr$`2015년`[i] + ggr$`2016년`[i] + ggr$`2017년`[i] + ggr$`2018년`[i])/4
}
colnames(hdi) <- c("국가", "HDI_순위", "인간개발지수", "기대수명",
"평균교육기간", "기대교육기간", "1인당_GNI")
df <- inner_join(ggr, hdi, by = "국가")
summary(lm(평균성장률 ~ 대륙 + HDI_순위 + Species, data = iris))
summary(lm(평균성장률 ~ 대륙 + HDI_순위 + 평균교육기간, data = df))
summary(lm(평균성장률 ~ 대륙 + HDI_순위 + 평균교육기간 + 기대교육기간, data = df))
install.packages("car")
library(car)
result <- summary(lm(평균성장률 ~ 대륙 + HDI_순위 + 평균교육기간 + 기대교육기간, data = df))
vif(result)
result <- summary(lm(평균성장률 ~ 대륙 + HDI_순위 + 평균교육기간 + 기대교육기간, data = df))
vif(result)
vif(summary(lm(평균성장률 ~ 대륙 + HDI_순위 + 평균교육기간 + 기대교육기간, data = df)))
result <- lm(평균성장률 ~ 대륙 + HDI_순위 + 평균교육기간 + 기대교육기간, data = df)
summary(result)
install.packages("QuantPsyc")
library(QuantPsyc)
lm.beta(result)
round(lm.beta(result), 2)
vif(result)
vif(result) < 10
summary(lm(평균성장률 ~ 대륙 + HDI_순위 + 평균교육기간 + 기대교육기간, data = df))
summary(lm(평균성장률 ~ HDI_순위 + 평균교육기간 + 기대교육기간, data = df))
a <- lm(평균성장률 ~ HDI_순위 + 평균교육기간 + 기대교육기간, data = df)
summary(a)
lm.beta(a)
vif(a)
a <- lm(평균성장률 ~ HDI_순위, data = df)
summary(a)
lm.beta(a)
vif(a)
result <- lm(평균성장률 ~ 대륙 + 인간개발지수수 + 평균교육기간 + 기대교육기간, data = df)
result <- lm(평균성장률 ~ 대륙 + 인간개발지수 + 평균교육기간 + 기대교육기간, data = df)
summary(result)
lm.beta(result)
round(lm.beta(result), 2)
vif(result)
a <- lm(평균성장률 ~ HDI_순위, data = df)
summary(a)
a <- lm(평균성장률 ~ 평균교육기간간, data = df)
a <- lm(평균성장률 ~ 평균교육기간, data = df)
summary(a)
lm.beta(a)
a <- lm(평균성장률 ~ 기대교육기간, data = df)
summary(a)
a <- lm(평균성장률 ~ 대륙, data = df)
summary(a)
lm.beta(a)
vif(a)
install.packages("e1071")
library(tidyverse)
library(e1071)
df <- read.csv("통신회사고객이탈예측.csv", header = F, stringsAsFactors = F)
df <- read.csv("통신회사고객이탈예측.csv", header = F, stringsAsFactors = F)
View(df)
df <- read.csv("통신회사고객이탈예측.csv", header = T, stringsAsFactors = F)
gsub(grep("^No", df[4:21]), "No", df[4:21])
grep("^No", df[4:21])
grep("^No", df[,4:21])
df <- read.csv("통신회사고객이탈예측.csv", header = T, stringsAsFactors = T)
df[1:2,]
df <- as.character(df$customerID)
df <- read.csv("통신회사고객이탈예측.csv", header = T, stringsAsFactors = T)
df$customerID <- as.character(df$customerID)
install.packages("DataExplorer")
library(DataExplorer)
plot_histogram(df)
plot_intro(df)
plot_scatterplot(df)
plot_correlation(df, cor_args = list( 'use' = 'complete.obs'))
plot_correlation(df
plot_correlation(df)
plot_correlation(df)
plot_correlation(df, type = 'c')
plot_intro(df)
set.seed(25)
inTrain <- sample(1:nrow(df), 0.75*nrow(df))
str(inTrain)
training <- data[indxTrain,]
training <- data[inTrain,]
testing <- data[-inTrain,]
set.seed(25)
inTrain <- sample(1:nrow(df), 0.75*nrow(df))
str(inTrain)
training <- data[inTrain,]
training <- df[inTrain,]
testing <- df[-inTrain,]
install.packages("caret")
library(caret)
train[,15]
df[,15]
df_s <- df[,7:15 & 21]
View(df_s)
df_s <- df[,c(7:15,21)]
df_s <- df[, c(1, 7:15, 21)]
df_a <- df[, c(1, 6, 16:21)]
df_p <- df[, c(1:5, 21)]
set.seed(25)
intrain_s <- createDataPartition(y = df_s$Churn, p = 0.7, list = FALSE)
train_s <- df_s[intrain_s, ]
test_s <- df_s[-intrain_s, ]
intrain_s <- createDataPartition(y = df_s$Churn, p = 0.7, list = FALSE)
train_s <- df_s[intrain_s, ]
test_s <- df_s[-intrain_s, ]
intrain_a <- createDataPartition(y = df_a$Churn, p = 0.7, list = FALSE)
train_a <- df_a[intrain_a, ]
test_a <- df_a[-intrain_a, ]
intrain_p <- createDataPartition(y = df_p$Churn, p = 0.7, list = FALSE)
train_p <- df_p[intrain_p, ]
test_p <- df_p[-intrain_p, ]
set.seed(25)
intrain_s <- createDataPartition(y = df_s$Churn, p = 0.7, list = FALSE)
train_s <- df_s[intrain_s, ]
test_s <- df_s[-intrain_s, ]
set.seed(25)
intrain_a <- createDataPartition(y = df_a$Churn, p = 0.7, list = FALSE)
train_a <- df_a[intrain_a, ]
test_a <- df_a[-intrain_a, ]
set.seed(25)
intrain_p <- createDataPartition(y = df_p$Churn, p = 0.7, list = FALSE)
train_p <- df_p[intrain_p, ]
test_p <- df_p[-intrain_p, ]
mdl_s <- naiveBayes(Churn ~ ., data = train_s)
mdl_a <- naiveBayes(Churn ~ ., data = train_a)
mdl_p <- naiveBayes(Churn ~ ., data = train_p)
mdl_s
df_s <- df[, c(7:15, 21)]
df_a <- df[, c(6, 16:21)]
df_p <- df[, c(1:5, 21)]
df <- df[,-1]
set.seed(25)
intrain_s <- createDataPartition(y = df_s$Churn, p = 0.7, list = FALSE)
train_s <- df_s[intrain_s, ]
test_s <- df_s[-intrain_s, ]
set.seed(25)
intrain_a <- createDataPartition(y = df_a$Churn, p = 0.7, list = FALSE)
train_a <- df_a[intrain_a, ]
test_a <- df_a[-intrain_a, ]
set.seed(25)
intrain_p <- createDataPartition(y = df_p$Churn, p = 0.7, list = FALSE)
train_p <- df_p[intrain_p, ]
test_p <- df_p[-intrain_p, ]
mdl_s <- naiveBayes(Churn ~ ., data = train_s)
mdl_a <- naiveBayes(Churn ~ ., data = train_a)
mdl_p <- naiveBayes(Churn ~ ., data = train_p)
mdl_s
methods("predict")
pred_s <- predict(mdl_s, test)
pred_s <- predict(mdl_s, test_s)
confusionMatrix(pred_s, test_s$Churn)
pred_a <- predict(mdl_a, test_a)
confusionMatrix(pred_a, test_a$Churn)
pred_p <- predict(mdl_p, test_p)
confusionMatrix(pred_p, test_p$Churn)
set.seed(25)
intrain <- createDataPartition(y = df$Churn, p = 0.7, list = FALSE)
train <- df[intrain, ]
test <- df[-intrain, ]
mdl <- naiveBayes(Churn ~ ., data = train)
pred <- predict(mdl, test)
confusionMatrix(pred, test$Churn)
install.packages("RSelenium")
library(RSelenium)
library(rvest)
install.packages("rvest")
install.packages("rvest")
install.packages("rvest")
library(rvest)
library(dplyr)
library(RSelenium)
library(rvest)
library(dplyr)
remDr<-remoteDriver(remoteServerAddr="localhost", port=4445L, browserName="chrome")
remDr$open()
remDr<-remoteDriver(remoteServerAddr = "localhost", port = 4445L, browserName = "chrome")
remDr$open()
remDr<-remoteDriver(remoteServerAddr = "localhost", port = 4445L, browserName = "chrome")
remDr$open()
remDr$open()
remDr$open()
remDr(port = 4445L, browser = "chrome")
rsDriver(port = 4445L, browser = "chrome")
remDr <- remoteDriver(browserName = "chrome")
remDr$open()
remDr <- remoteDriver(remoteServerAddr="localhost", port=4445L, browserName = "chrome",)
remDr$open()
remDr$open()
remDr$navigate("https://www.instagram.com/explore/tags/%EC%A7%9C%EC%9E%A5%EB%A9%B4/")
mean(a)
a<-1:5
mean(a)
print(mean(a))
